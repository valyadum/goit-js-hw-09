{"mappings":"AACmBA,SAASC,cAAc,SAI/BC,iBAAiB,UAE5B,SAAuBC,EAAOC,EAAUC,GACpCF,EAAMG,iBACN,MAAMC,EAAOJ,EAAMK,cACbC,EAASC,OAAOH,EAAKI,SAASC,OAAOC,OACrCC,EAAaJ,OAAOH,EAAKI,SAASI,MAAMF,OACxCG,EAAYN,OAAOH,EAAKI,SAASM,KAAKJ,OAC5CK,QAAQC,IAAIV,EAAQK,EAAYE,GAChCX,EAAQS,EAGR,IAAK,IAAIM,EAAW,EAAGA,GAAYX,EAAQW,IACvC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACHH,EACAN,QAAQC,IAAI,uBAAqBC,QAAiBf,OAEhDa,QAAMC,IAAI,sBAAoBC,QAAiBf,MAAU,GAEhEA,GACHA,GAASW,CAAS,G","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst formSubmit = document.querySelector('.form');\nlet position = 0;\nlet delay;\n\nformSubmit.addEventListener('submit', createPromise);\n\nfunction createPromise(event, position, delay) {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const number = Number(form.elements.amount.value);\n    const firstDelay = Number(form.elements.delay.value);\n    const stepDelay = Number(form.elements.step.value);\n    console.log(number, firstDelay, stepDelay);\n    delay = firstDelay;\n\n\n    for (let position = 1; position <= number; position++) {\n        return new Promise((resolve, reject) => {\n            const shouldResolve = Math.random() > 0.3;\n            setTimeout(() => {\n                if (shouldResolve) {\n                    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n                } else {\n                    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n                }\n            }, delay);\n            delay += stepDelay;\n        })     \n    }\n\n\n\n\n\n\n    // return new Promise((resolve, reject) => {\n    //     const shouldResolve = Math.random() > 0.3;\n    //     delay = firstDelay;\n    //     for (let position = 1; position <= number; position++) {\n    //         console.log(`${position} ${delay}`);\n    //         setTimeout(() => {\n    //             if (shouldResolve) {\n    //                 console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    //             } else {\n    //                 console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    //             }\n    //         }, delay);\n    //         delay += stepDelay;\n    //     }\n    // })\n\n}\n\n\nfunction handleSubmit(event) {\n    console.log('hi');\n    event.preventDefault();\n    const form = event.currentTarget;\n    const number = form.elements.amount.value;\n    const firstDelay = form.elements.delay.value;\n    const stepDelay = form.elements.step.value;\n    console.log(number, firstDelay, stepDelay);\n}\n// createPromise(2, 1500)\n//     .then(\n//         promiseSuccess\n//     )\n//     .catch(\n//         promiseError\n//     );\n// function promiseSuccess(result) {\n//     console.log('promiseSuccess');\n//     console.log(result);\n// }\n// function promiseError(result) {\n//     console.log('promiseError');\n//     console.log(result);\n// }"],"names":["document","querySelector","addEventListener","event","position","delay1","preventDefault","form","currentTarget","number","Number","elements","amount","value","firstDelay","delay","stepDelay","step","console","log","position1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.b320297e.js.map"}